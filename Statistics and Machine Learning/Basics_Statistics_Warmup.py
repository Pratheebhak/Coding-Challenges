# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OwmwymacyiE998Psc5p-wDgOeqErsiQ0
"""

"""
Basic Statistics Warmup
https://www.hackerrank.com/challenges/stat-warmup/problem
"""
# Enter your code here. Read input from STDIN. Print output to STDOUT
import numpy as np

def mean(x, length):
    return sum(x)/length

def median(x, length):
    # Even number of elements
    if length % 2 == 0:
        mid1 = x[length//2]
        mid2 = x[length//2 - 1] 
        return (mid1 + mid2)/2
    else:
        return x[length//2]

def mode(x):
    return max(x, key=x.count)

def std_dev(x, n):
    mean_x = mean(x, n)
    sum_squares = 0.0
    for num in x:
        sum_squares += (num - mean_x)**2
    return (sum_squares/n)**0.5

def confidence_intervals(x, n):
    # CI = mean +/- z(stddev/sqrt(n))
    mean_x = mean(x, n)
    # confidence level value, z for 95%
    z = 1.96
    std_x = std_dev(x, n)
    lower = mean_x - z * (std_x/(n)**0.5)
    upper = mean_x + z * (std_x/(n)**0.5)
    return (lower, upper)

if __name__ == '__main__':
    n = int(input())
    nums = list(map(int, input().split(' ')))
    nums.sort()
    print(mean(nums, n))
    print(median(nums, n))
    print(mode(nums))
    print('{:0.1f}'.format(std_dev(nums, n)))
    lower, upper = confidence_intervals(nums, n)
    print('{:0.1f} {:0.1f}'.format(lower, upper))