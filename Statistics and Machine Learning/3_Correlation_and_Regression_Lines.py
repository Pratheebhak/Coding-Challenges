# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OwmwymacyiE998Psc5p-wDgOeqErsiQ0
"""

"""
3) Correlation and Regression Lines - A Quick Recap #3

Here are the test scores of 10 students in physics and history:

Physics Scores  15  12  8   8   7   7   7   6   5   3
History Scores  10  25  17  11  13  17  20  13  9   15
When a student scores 10 in Physics, what is his probable score in History? Compute the answer correct to one decimal place.

Output Format

In the text box, enter the floating point/decimal value required. Do not leave any leading or trailing spaces. Your answer may look like: 5.5

This is NOT the actual answer - just the format in which you should provide your answer.
"""
# Enter your code here. Read input from STDIN. Print output to STDOUT
X =[15,12,8,8,7,7,7,6,5,3]
Y = [10,25,17,11,13,17,20,13,9,15]

def mean(arr):
  return sum(arr)/len(arr)

x_mean = mean(X)
y_mean = mean(Y)

# slope = Σ(x - mean(x)) * (y - mean(y)) / Σ (x - mean(x))²
xy_sum, xsquare_sum = 0.0, 0.0
for x, y in zip(X, Y):
    xy_sum += (x - x_mean) * (y - y_mean)
    xsquare_sum += (x - x_mean)**2
    
slope = xy_sum / xsquare_sum
intercept_y = y_mean - (x_mean * slope)

# y = mx + b
# m is the slope, 
# b is the intercept of y, 
# y is the probable score(dependent variable)
# x is the independent variable
probable_score = slope*10 + intercept_y
print("{:0.1f}".format(probable_score))